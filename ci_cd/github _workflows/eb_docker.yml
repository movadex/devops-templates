name: Deploy [PROD] to Elastic Beanstalk

env:
    ENVIRONMENT: main
    AWS_REGION: us-west-1
    DOCKER_IMAGE_NAME:  # docker image name in ECR
    ECR_REGISTRY: url # ECR URL
    S3_BUCKET: # bucket for build version
    EB_APPLICATION_NAME: # eb app name
    EB_ENVIRONMENT_NAME: # eb env name
    EB_CONFIGS_FOLDER: # folder in project for aws eb artifacts/nginx configs/etc
    DOCKERFILE: Dockerfile


on:
    workflow_dispatch: # for production, no automated deploys
        # or
on:
  push: # for dev, auto deploy on push
    branches:
      - dev
      -

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set GIT_SHA
              run: echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Verify AWS authentication
              run: aws sts get-caller-identity

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Log in to Amazon ECR
              uses: aws-actions/amazon-ecr-login@v2

            - name: Build Docker image
              run: |
                  docker build -f ${{ env.DOCKERFILE }} -t ${{ env.DOCKER_IMAGE_NAME }} .

            - name: Substitute GIT_SHA in EB template and upload to S3
              run: |
                  cd ${{ env.EB_CONFIGS_FOLDER }}
                  sed "s/\$GIT_SHA/$GIT_SHA/g" eb-template.json > Dockerrun.aws.json 
                  zip -r app-${GIT_SHA}.zip Dockerrun.aws.json .platform
                  aws s3 cp app-${GIT_SHA}.zip s3://${{ env.S3_BUCKET }}/app-${GIT_SHA}.zip

            - name: Tag Docker image
              run: |
                  docker tag ${{ env.DOCKER_IMAGE_NAME }}:latest \
                    ${{ env.ECR_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:$GIT_SHA

            - name: Push Docker image to ECR
              run: |
                  docker push ${{ env.ECR_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:$GIT_SHA

            - name: Check and Create Elastic Beanstalk app version
              run: |
                  VERSION_EXISTS=$(aws elasticbeanstalk describe-application-versions \
                    --application-name ${{ env.EB_APPLICATION_NAME }} \
                    --version-labels ${{ env.EB_APPLICATION_NAME }}-version-${GIT_SHA} \
                    --query 'ApplicationVersions[0]' \
                    --output text)

                  if [ "$VERSION_EXISTS" == "None" ]; then
                    echo "Creating new application version: ${{ env.EB_APPLICATION_NAME }}-version-${GIT_SHA}"
                    aws elasticbeanstalk create-application-version \
                      --application-name ${{ env.EB_APPLICATION_NAME }} \
                      --version-label ${{ env.EB_APPLICATION_NAME }}-version-${GIT_SHA} \
                      --source-bundle S3Bucket=${{ env.S3_BUCKET }},S3Key=app-${GIT_SHA}.zip
                  else
                    echo "Application version ${{ env.EB_APPLICATION_NAME }}-version-${GIT_SHA} already exists."
                  fi

            - name: Update Elastic Beanstalk Environment
              run: |
                  aws elasticbeanstalk update-environment \
                    --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
                    --version-label ${{ env.EB_APPLICATION_NAME }}-version-${GIT_SHA}